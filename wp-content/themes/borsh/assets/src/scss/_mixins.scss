//
// Custom mixins
//
// Custom media query range
@mixin mq($min, $max) {
  @media only screen and (min-width: $min+'px') and (max-width: $max+'px') {
    @content;
  }
}

@mixin mqHeight($max) {
  @media only screen and (max-height: $max+'px') {
    @content;
  }
}

@mixin minHeight($min) {
  @media only screen and (min-height: $min+'px') {
    @content;
  }
}

@mixin minw($min) {
  @media screen and (min-width: $min+'px') {
    @content;
  }
}
/**
	-----------------------------------------------------------------
	SVG Icons Encoder
  usage:
	#element {
		background-image: iconArrowRight( '#000');
	}
	-----------------------------------------------------------------
**/
@function svg-encode($svg) {
  @if not str-index($svg, ' xmlns="http://www.w3.org/2000/svg"') {
    $svg: str-insert($svg, ' xmlns="http://www.w3.org/2000/svg"', 5);
  }

  $encode: (
          '"': "%22",
          "#": "%23",
          "%": "%25",
          "<": "%3C",
          ">": "%3E",
          "{": "%7B",
          "}": "%7D",
  );

  $string: "";
  $character: "";

  @for $i from 1 through str-length($svg) {
    $character: str-slice($svg, $i, $i);

    @if index(map-keys($encode), $character) {
      $character: map-get($encode, $character);
    }

    $string: $string + $character;
  }

  @return url("data:image/svg+xml,#{$string}");
}

